{"ast":null,"code":"// src/services/aiService.js\n\nclass AIService {\n  constructor() {\n    // 模擬 AI API 配置\n    this.baseURL = 'https://api.openai.com/v1';\n    this.apiKey = process.env.REACT_APP_OPENAI_API_KEY || '';\n\n    // 生人文案主題庫\n    this.copywritingThemes = {\n      product: {\n        keywords: ['品質', '創新', '價值', '體驗', '信賴', '專業', '卓越', '突破'],\n        scenarios: ['產品發布', '品牌故事', '用戶見證', '技術優勢', '市場領導'],\n        hooks: ['你知道嗎？', '想像一下...', '有沒有想過', '是時候了', '別再等了']\n      },\n      service: {\n        keywords: ['專業', '貼心', '效率', '解決', '支援', '服務', '滿意', '安心'],\n        scenarios: ['服務介紹', '客戶案例', '問題解決', '專業諮詢', '售後保障'],\n        hooks: ['為什麼選擇我們？', '讓我們來幫您', '您的需求我們懂', '專業團隊為您服務', '一站式解決方案']\n      },\n      lifestyle: {\n        keywords: ['生活', '品味', '享受', '質感', '美好', '精緻', '優雅', '舒適'],\n        scenarios: ['生活方式', '品味提升', '休閒娛樂', '居家生活', '個人風格'],\n        hooks: ['生活可以更美好', '品味從選擇開始', '給自己一個理由', '值得擁有的美好', '讓生活更精彩']\n      },\n      business: {\n        keywords: ['商機', '成長', '效益', '投資', '收益', '策略', '競爭', '優勢'],\n        scenarios: ['商業機會', '投資方案', '合作提案', '市場分析', '競爭優勢'],\n        hooks: ['抓住商機', '投資未來', '合作共贏', '領先競爭', '創造價值']\n      }\n    };\n\n    // 文案結構模板庫\n    this.copyTemplates = {\n      hooks: [\"你是否曾經想過{問題}？\", \"在{場景}中，最重要的是什麼？\", \"為什麼{目標對象}都選擇{解決方案}？\", \"如果有一個方法能讓你{期望結果}...\", \"想像一下{理想情境}的感覺\"],\n      benefits: [\"不僅僅是{基本功能}，更是{深層價值}\", \"從{現況}到{理想狀態}的完美轉換\", \"讓{目標}變得{形容詞}又{形容詞}\", \"專為{目標對象}量身打造的{解決方案}\"],\n      proofs: [\"超過{數字}的用戶見證了{效果}\", \"經過{時間}的市場驗證\", \"{權威機構}認證推薦\", \"成功案例遍布{範圍}\"],\n      actions: [\"現在就開始{行動}，改變從今天開始\", \"把握{時機}，機會不等人\", \"加入{群體}，一起{目標}\", \"聯繫我們，讓專業為您{服務內容}\"]\n    };\n  }\n\n  // 模擬 AI 增強的文案生成\n  async enhanceCopywriting(topic, theme, tone, wordCount = 800) {\n    try {\n      // 模擬 API 延遲\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const enhancedContent = this.generateEnhancedContent(quote, theme, tone);\n      const suggestions = this.generateSuggestions(quote, theme);\n      const visualElements = this.generateVisualElements(theme);\n      return {\n        enhancedScript: enhancedContent,\n        suggestions: suggestions,\n        visualElements: visualElements,\n        confidence: Math.floor(Math.random() * 20) + 80,\n        // 80-100% 信心度\n        aiGenerated: true\n      };\n    } catch (error) {\n      console.error('AI 增強失敗:', error);\n      // 回退到基本功能\n      return this.fallbackEnhancement(quote, theme, tone);\n    }\n  }\n\n  // 生成增強內容\n  generateEnhancedContent(quote, theme, tone) {\n    const themeData = this.inspirationalThemes[theme];\n    const randomKeyword = themeData.keywords[Math.floor(Math.random() * themeData.keywords.length)];\n    const randomScenario = themeData.scenarios[Math.floor(Math.random() * themeData.scenarios.length)];\n    const enhancedSections = {\n      intro: this.generateEnhancedIntro(theme, randomKeyword),\n      story: this.generateEnhancedStory(quote, theme, randomScenario),\n      closing: this.generateEnhancedClosing(tone, randomKeyword),\n      scenes: this.generateEnhancedScenes(theme, randomScenario)\n    };\n    return enhancedSections;\n  }\n\n  // 生成增強版開場白\n  generateEnhancedIntro(theme, keyword) {\n    const intros = {\n      success: [`在追求${keyword}的路上，每個人都有屬於自己的故事...`, `${keyword}從來不是偶然，而是來自日復一日的堅持...`, `什麼是真正的${keyword}？讓我們從一個故事開始說起...`],\n      growth: [`${keyword}是生命中最美麗的過程，就像破繭而出的蝴蝶...`, `每一次的${keyword}都在告訴我們，改變是可能的...`, `在${keyword}的道路上，沒有終點，只有不斷的超越...`],\n      courage: [`${keyword}不是沒有恐懼，而是即使恐懼仍然前行...`, `真正的${keyword}來自於面對未知的決心...`, `${keyword}是一種選擇，選擇相信自己的力量...`]\n    };\n    const themeIntros = intros[theme] || intros.success;\n    return themeIntros[Math.floor(Math.random() * themeIntros.length)];\n  }\n\n  // 生成增強版故事\n  generateEnhancedStory(quote, theme, scenario) {\n    return `想像一下${scenario}中的主角，面對重重困難時的內心掙扎。${quote} 這句話不僅僅是文字，更是一種信念的力量。當我們真正理解並實踐這句話時，我們會發現內在的潛能被喚醒，原本看似不可能的事情變得觸手可及。這就是信念的力量，這就是${scenario}背後真正的意義。`;\n  }\n\n  // 生成增強版結尾\n  generateEnhancedClosing(tone, keyword) {\n    const closings = {\n      inspirational: [`現在就是開始的最佳時機，讓${keyword}成為你前進的動力。`, `每一天都是新的開始，每一步都在創造屬於你的${keyword}故事。`, `相信自己，相信${keyword}的力量，你的未來從現在開始改寫。`],\n      motivational: [`行動起來吧！讓${keyword}不再只是夢想，而是你生活的實踐。`, `現在就動手，現在就改變，${keyword}就在你的手中。`, `不要等待完美的時機，因為每一個當下都是創造${keyword}的最佳時刻。`],\n      reflective: [`回頭看看走過的路，${keyword}一直都在那裡，等待著你去發現。`, `靜下心來想想，${keyword}的種子早已在心中萌芽。`, `或許${keyword}的真諦就在於這種深度的思考與感悟。`]\n    };\n    const toneClosings = closings[tone] || closings.inspirational;\n    return toneClosings[Math.floor(Math.random() * toneClosings.length)];\n  }\n\n  // 生成增強版場景\n  generateEnhancedScenes(theme, scenario) {\n    const sceneTemplates = {\n      success: [\"日出時分，城市天際線的鳥瞰鏡頭，象徵新的開始\", \"人物在辦公室深夜工作的剪影，專注而堅定\", \"從失敗到成功的蒙太奇，展現努力的過程\", \"成功時刻的慶祝場面，但重點在眼中的堅定\"],\n      growth: [\"植物從種子到參天大樹的延時攝影\", \"人物學習新技能的過程片段\", \"從困難到突破的轉變時刻\", \"蝴蝶破繭而出的隱喻畫面\"],\n      courage: [\"人物站在懸崖邊，面對廣闊天空的背影\", \"在黑暗中點亮第一盞燈的瞬間\", \"決定性時刻的慢鏡頭特寫\", \"從恐懼到勇敢的眼神變化\"]\n    };\n    return sceneTemplates[theme] || sceneTemplates.success;\n  }\n\n  // 生成建議\n  generateSuggestions(quote, theme) {\n    return {\n      alternativeQuotes: this.generateAlternativeQuotes(quote, theme),\n      improvementTips: this.generateImprovementTips(theme),\n      relatedThemes: this.getRelatedThemes(theme)\n    };\n  }\n\n  // 生成替代金句\n  generateAlternativeQuotes(originalQuote, theme) {\n    const alternatives = [];\n    const themeData = this.inspirationalThemes[theme];\n    for (let i = 0; i < 3; i++) {\n      const template = this.quoteTemplates[Math.floor(Math.random() * this.quoteTemplates.length)];\n      const keywords = themeData.keywords;\n      let quote = template.replace(/\\{[^}]+\\}/g, match => {\n        return keywords[Math.floor(Math.random() * keywords.length)];\n      });\n      alternatives.push(quote);\n    }\n    return alternatives;\n  }\n\n  // 生成改進建議\n  generateImprovementTips(theme) {\n    const tips = {\n      success: [\"考慮添加具體的成功指標或里程碑\", \"可以融入失敗後重新站起的元素\", \"強調過程而非結果的重要性\"],\n      growth: [\"加入個人成長的具體例子\", \"可以對比過去和現在的改變\", \"強調學習和適應的重要性\"],\n      courage: [\"描述克服具體恐懼的情境\", \"可以加入支持和鼓勵的元素\", \"強調勇氣是可以培養的品質\"]\n    };\n    return tips[theme] || tips.success;\n  }\n\n  // 獲取相關主題\n  getRelatedThemes(currentTheme) {\n    const relationships = {\n      success: ['growth', 'courage'],\n      growth: ['success', 'courage'],\n      courage: ['success', 'growth']\n    };\n    return relationships[currentTheme] || [];\n  }\n\n  // 生成視覺元素建議\n  generateVisualElements(theme) {\n    const elements = {\n      success: {\n        colors: ['#FFD700', '#FF6B35', '#1E3A8A'],\n        fonts: ['現代感強的無襯線字體', '粗體標題字型'],\n        effects: ['金色光芒特效', '上升箭頭動畫', '光線追蹤效果']\n      },\n      growth: {\n        colors: ['#22C55E', '#84CC16', '#0EA5E9'],\n        fonts: ['自然有機感的字體', '手寫風格字型'],\n        effects: ['生長動畫', '漸變色過渡', '粒子效果']\n      },\n      courage: {\n        colors: ['#DC2626', '#F59E0B', '#7C3AED'],\n        fonts: ['力量感的粗體字', '英雄主義風格字型'],\n        effects: ['火焰特效', '閃電動畫', '光劍效果']\n      }\n    };\n    return elements[theme] || elements.success;\n  }\n\n  // 回退增強功能（當 AI API 不可用時）\n  fallbackEnhancement(quote, theme, tone) {\n    return {\n      enhancedScript: {\n        intro: `關於${theme}的思考...`,\n        story: `${quote} 這句話蕴含着深刻的智慧...`,\n        closing: \"讓我們一起踐行這個理念。\",\n        scenes: [\"基本場景描述\"]\n      },\n      suggestions: {\n        alternativeQuotes: [\"建議功能暫時不可用\"],\n        improvementTips: [\"請稍後重試\"],\n        relatedThemes: []\n      },\n      visualElements: {\n        colors: ['#333333'],\n        fonts: ['默認字體'],\n        effects: ['基本效果']\n      },\n      confidence: 60,\n      aiGenerated: false\n    };\n  }\n\n  // 生成智能金句建議\n  async generateSmartQuotes(theme, mood, length = 5) {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 800));\n      const themeData = this.inspirationalThemes[theme];\n      const quotes = [];\n      for (let i = 0; i < length; i++) {\n        const template = this.quoteTemplates[Math.floor(Math.random() * this.quoteTemplates.length)];\n        const keywords = themeData.keywords;\n        let quote = template.replace(/\\{[^}]+\\}/g, () => {\n          return keywords[Math.floor(Math.random() * keywords.length)];\n        });\n        quotes.push({\n          text: quote,\n          theme: theme,\n          confidence: Math.floor(Math.random() * 20) + 80,\n          popularity: Math.floor(Math.random() * 100)\n        });\n      }\n      return quotes.sort((a, b) => b.confidence - a.confidence);\n    } catch (error) {\n      console.error('智能金句生成失敗:', error);\n      return [];\n    }\n  }\n\n  // 分析使用者輸入的金句\n  async analyzeQuote(quote) {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 600));\n      const analysis = {\n        sentiment: this.analyzeSentiment(quote),\n        themes: this.detectThemes(quote),\n        emotionalImpact: Math.floor(Math.random() * 30) + 70,\n        suggestions: this.getQuoteImprovementSuggestions(quote),\n        keywords: this.extractKeywords(quote)\n      };\n      return analysis;\n    } catch (error) {\n      console.error('金句分析失敗:', error);\n      return null;\n    }\n  }\n\n  // 情感分析\n  analyzeSentiment(quote) {\n    const positiveWords = ['成功', '成長', '勇氣', '希望', '夢想', '堅持', '努力', '相信'];\n    const negativeWords = ['失敗', '困難', '挫折', '恐懼'];\n    let positive = 0;\n    let negative = 0;\n    positiveWords.forEach(word => {\n      if (quote.includes(word)) positive++;\n    });\n    negativeWords.forEach(word => {\n      if (quote.includes(word)) negative++;\n    });\n    if (positive > negative) return 'positive';\n    if (negative > positive) return 'negative';\n    return 'neutral';\n  }\n\n  // 檢測主題\n  detectThemes(quote) {\n    const themes = [];\n    Object.keys(this.inspirationalThemes).forEach(theme => {\n      const keywords = this.inspirationalThemes[theme].keywords;\n      const matches = keywords.filter(keyword => quote.includes(keyword));\n      if (matches.length > 0) {\n        themes.push({\n          theme: theme,\n          confidence: matches.length / keywords.length * 100,\n          matchedKeywords: matches\n        });\n      }\n    });\n    return themes.sort((a, b) => b.confidence - a.confidence);\n  }\n\n  // 提取關鍵詞\n  extractKeywords(quote) {\n    const allKeywords = Object.values(this.inspirationalThemes).flatMap(theme => theme.keywords);\n    return allKeywords.filter(keyword => quote.includes(keyword));\n  }\n\n  // 獲取金句改進建議\n  getQuoteImprovementSuggestions(quote) {\n    const suggestions = [];\n    if (quote.length < 10) {\n      suggestions.push(\"金句可以更具體一些，增加更多細節\");\n    }\n    if (quote.length > 50) {\n      suggestions.push(\"金句可以更簡潔，突出核心訊息\");\n    }\n    if (!quote.includes('你') && !quote.includes('我')) {\n      suggestions.push(\"可以加入人稱代詞，讓金句更有親和力\");\n    }\n    const keywords = this.extractKeywords(quote);\n    if (keywords.length === 0) {\n      suggestions.push(\"可以加入更多勵志關鍵詞，增強激勵效果\");\n    }\n    return suggestions;\n  }\n}\n\n// 導出單例實例\nexport const aiService = new AIService();\nexport default AIService;","map":{"version":3,"names":["AIService","constructor","baseURL","apiKey","process","env","REACT_APP_OPENAI_API_KEY","copywritingThemes","product","keywords","scenarios","hooks","service","lifestyle","business","copyTemplates","benefits","proofs","actions","enhanceCopywriting","topic","theme","tone","wordCount","Promise","resolve","setTimeout","enhancedContent","generateEnhancedContent","quote","suggestions","generateSuggestions","visualElements","generateVisualElements","enhancedScript","confidence","Math","floor","random","aiGenerated","error","console","fallbackEnhancement","themeData","inspirationalThemes","randomKeyword","length","randomScenario","enhancedSections","intro","generateEnhancedIntro","story","generateEnhancedStory","closing","generateEnhancedClosing","scenes","generateEnhancedScenes","keyword","intros","success","growth","courage","themeIntros","scenario","closings","inspirational","motivational","reflective","toneClosings","sceneTemplates","alternativeQuotes","generateAlternativeQuotes","improvementTips","generateImprovementTips","relatedThemes","getRelatedThemes","originalQuote","alternatives","i","template","quoteTemplates","replace","match","push","tips","currentTheme","relationships","elements","colors","fonts","effects","generateSmartQuotes","mood","quotes","text","popularity","sort","a","b","analyzeQuote","analysis","sentiment","analyzeSentiment","themes","detectThemes","emotionalImpact","getQuoteImprovementSuggestions","extractKeywords","positiveWords","negativeWords","positive","negative","forEach","word","includes","Object","keys","matches","filter","matchedKeywords","allKeywords","values","flatMap","aiService"],"sources":["/Users/gilko/Documents/claude-code/soup2/motivation-script-generator/src/services/aiService.js"],"sourcesContent":["// src/services/aiService.js\n\nclass AIService {\n    constructor() {\n        // 模擬 AI API 配置\n        this.baseURL = 'https://api.openai.com/v1';\n        this.apiKey = process.env.REACT_APP_OPENAI_API_KEY || '';\n        \n        // 生人文案主題庫\n        this.copywritingThemes = {\n            product: {\n                keywords: ['品質', '創新', '價值', '體驗', '信賴', '專業', '卓越', '突破'],\n                scenarios: ['產品發布', '品牌故事', '用戶見證', '技術優勢', '市場領導'],\n                hooks: ['你知道嗎？', '想像一下...', '有沒有想過', '是時候了', '別再等了']\n            },\n            service: {\n                keywords: ['專業', '貼心', '效率', '解決', '支援', '服務', '滿意', '安心'],\n                scenarios: ['服務介紹', '客戶案例', '問題解決', '專業諮詢', '售後保障'],\n                hooks: ['為什麼選擇我們？', '讓我們來幫您', '您的需求我們懂', '專業團隊為您服務', '一站式解決方案']\n            },\n            lifestyle: {\n                keywords: ['生活', '品味', '享受', '質感', '美好', '精緻', '優雅', '舒適'],\n                scenarios: ['生活方式', '品味提升', '休閒娛樂', '居家生活', '個人風格'],\n                hooks: ['生活可以更美好', '品味從選擇開始', '給自己一個理由', '值得擁有的美好', '讓生活更精彩']\n            },\n            business: {\n                keywords: ['商機', '成長', '效益', '投資', '收益', '策略', '競爭', '優勢'],\n                scenarios: ['商業機會', '投資方案', '合作提案', '市場分析', '競爭優勢'],\n                hooks: ['抓住商機', '投資未來', '合作共贏', '領先競爭', '創造價值']\n            }\n        };\n        \n        // 文案結構模板庫\n        this.copyTemplates = {\n            hooks: [\n                \"你是否曾經想過{問題}？\",\n                \"在{場景}中，最重要的是什麼？\",\n                \"為什麼{目標對象}都選擇{解決方案}？\",\n                \"如果有一個方法能讓你{期望結果}...\",\n                \"想像一下{理想情境}的感覺\"\n            ],\n            benefits: [\n                \"不僅僅是{基本功能}，更是{深層價值}\",\n                \"從{現況}到{理想狀態}的完美轉換\",\n                \"讓{目標}變得{形容詞}又{形容詞}\",\n                \"專為{目標對象}量身打造的{解決方案}\"\n            ],\n            proofs: [\n                \"超過{數字}的用戶見證了{效果}\",\n                \"經過{時間}的市場驗證\",\n                \"{權威機構}認證推薦\",\n                \"成功案例遍布{範圍}\"\n            ],\n            actions: [\n                \"現在就開始{行動}，改變從今天開始\",\n                \"把握{時機}，機會不等人\",\n                \"加入{群體}，一起{目標}\",\n                \"聯繫我們，讓專業為您{服務內容}\"\n            ]\n        };\n    }\n\n    // 模擬 AI 增強的文案生成\n    async enhanceCopywriting(topic, theme, tone, wordCount = 800) {\n        try {\n            // 模擬 API 延遲\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            \n            const enhancedContent = this.generateEnhancedContent(quote, theme, tone);\n            const suggestions = this.generateSuggestions(quote, theme);\n            const visualElements = this.generateVisualElements(theme);\n            \n            return {\n                enhancedScript: enhancedContent,\n                suggestions: suggestions,\n                visualElements: visualElements,\n                confidence: Math.floor(Math.random() * 20) + 80, // 80-100% 信心度\n                aiGenerated: true\n            };\n            \n        } catch (error) {\n            console.error('AI 增強失敗:', error);\n            // 回退到基本功能\n            return this.fallbackEnhancement(quote, theme, tone);\n        }\n    }\n\n    // 生成增強內容\n    generateEnhancedContent(quote, theme, tone) {\n        const themeData = this.inspirationalThemes[theme];\n        const randomKeyword = themeData.keywords[Math.floor(Math.random() * themeData.keywords.length)];\n        const randomScenario = themeData.scenarios[Math.floor(Math.random() * themeData.scenarios.length)];\n        \n        const enhancedSections = {\n            intro: this.generateEnhancedIntro(theme, randomKeyword),\n            story: this.generateEnhancedStory(quote, theme, randomScenario),\n            closing: this.generateEnhancedClosing(tone, randomKeyword),\n            scenes: this.generateEnhancedScenes(theme, randomScenario)\n        };\n        \n        return enhancedSections;\n    }\n\n    // 生成增強版開場白\n    generateEnhancedIntro(theme, keyword) {\n        const intros = {\n            success: [\n                `在追求${keyword}的路上，每個人都有屬於自己的故事...`,\n                `${keyword}從來不是偶然，而是來自日復一日的堅持...`,\n                `什麼是真正的${keyword}？讓我們從一個故事開始說起...`\n            ],\n            growth: [\n                `${keyword}是生命中最美麗的過程，就像破繭而出的蝴蝶...`,\n                `每一次的${keyword}都在告訴我們，改變是可能的...`,\n                `在${keyword}的道路上，沒有終點，只有不斷的超越...`\n            ],\n            courage: [\n                `${keyword}不是沒有恐懼，而是即使恐懼仍然前行...`,\n                `真正的${keyword}來自於面對未知的決心...`,\n                `${keyword}是一種選擇，選擇相信自己的力量...`\n            ]\n        };\n        \n        const themeIntros = intros[theme] || intros.success;\n        return themeIntros[Math.floor(Math.random() * themeIntros.length)];\n    }\n\n    // 生成增強版故事\n    generateEnhancedStory(quote, theme, scenario) {\n        return `想像一下${scenario}中的主角，面對重重困難時的內心掙扎。${quote} 這句話不僅僅是文字，更是一種信念的力量。當我們真正理解並實踐這句話時，我們會發現內在的潛能被喚醒，原本看似不可能的事情變得觸手可及。這就是信念的力量，這就是${scenario}背後真正的意義。`;\n    }\n\n    // 生成增強版結尾\n    generateEnhancedClosing(tone, keyword) {\n        const closings = {\n            inspirational: [\n                `現在就是開始的最佳時機，讓${keyword}成為你前進的動力。`,\n                `每一天都是新的開始，每一步都在創造屬於你的${keyword}故事。`,\n                `相信自己，相信${keyword}的力量，你的未來從現在開始改寫。`\n            ],\n            motivational: [\n                `行動起來吧！讓${keyword}不再只是夢想，而是你生活的實踐。`,\n                `現在就動手，現在就改變，${keyword}就在你的手中。`,\n                `不要等待完美的時機，因為每一個當下都是創造${keyword}的最佳時刻。`\n            ],\n            reflective: [\n                `回頭看看走過的路，${keyword}一直都在那裡，等待著你去發現。`,\n                `靜下心來想想，${keyword}的種子早已在心中萌芽。`,\n                `或許${keyword}的真諦就在於這種深度的思考與感悟。`\n            ]\n        };\n        \n        const toneClosings = closings[tone] || closings.inspirational;\n        return toneClosings[Math.floor(Math.random() * toneClosings.length)];\n    }\n\n    // 生成增強版場景\n    generateEnhancedScenes(theme, scenario) {\n        const sceneTemplates = {\n            success: [\n                \"日出時分，城市天際線的鳥瞰鏡頭，象徵新的開始\",\n                \"人物在辦公室深夜工作的剪影，專注而堅定\",\n                \"從失敗到成功的蒙太奇，展現努力的過程\",\n                \"成功時刻的慶祝場面，但重點在眼中的堅定\"\n            ],\n            growth: [\n                \"植物從種子到參天大樹的延時攝影\",\n                \"人物學習新技能的過程片段\",\n                \"從困難到突破的轉變時刻\",\n                \"蝴蝶破繭而出的隱喻畫面\"\n            ],\n            courage: [\n                \"人物站在懸崖邊，面對廣闊天空的背影\",\n                \"在黑暗中點亮第一盞燈的瞬間\",\n                \"決定性時刻的慢鏡頭特寫\",\n                \"從恐懼到勇敢的眼神變化\"\n            ]\n        };\n        \n        return sceneTemplates[theme] || sceneTemplates.success;\n    }\n\n    // 生成建議\n    generateSuggestions(quote, theme) {\n        return {\n            alternativeQuotes: this.generateAlternativeQuotes(quote, theme),\n            improvementTips: this.generateImprovementTips(theme),\n            relatedThemes: this.getRelatedThemes(theme)\n        };\n    }\n\n    // 生成替代金句\n    generateAlternativeQuotes(originalQuote, theme) {\n        const alternatives = [];\n        const themeData = this.inspirationalThemes[theme];\n        \n        for (let i = 0; i < 3; i++) {\n            const template = this.quoteTemplates[Math.floor(Math.random() * this.quoteTemplates.length)];\n            const keywords = themeData.keywords;\n            \n            let quote = template.replace(/\\{[^}]+\\}/g, (match) => {\n                return keywords[Math.floor(Math.random() * keywords.length)];\n            });\n            \n            alternatives.push(quote);\n        }\n        \n        return alternatives;\n    }\n\n    // 生成改進建議\n    generateImprovementTips(theme) {\n        const tips = {\n            success: [\n                \"考慮添加具體的成功指標或里程碑\",\n                \"可以融入失敗後重新站起的元素\",\n                \"強調過程而非結果的重要性\"\n            ],\n            growth: [\n                \"加入個人成長的具體例子\",\n                \"可以對比過去和現在的改變\",\n                \"強調學習和適應的重要性\"\n            ],\n            courage: [\n                \"描述克服具體恐懼的情境\",\n                \"可以加入支持和鼓勵的元素\",\n                \"強調勇氣是可以培養的品質\"\n            ]\n        };\n        \n        return tips[theme] || tips.success;\n    }\n\n    // 獲取相關主題\n    getRelatedThemes(currentTheme) {\n        const relationships = {\n            success: ['growth', 'courage'],\n            growth: ['success', 'courage'],\n            courage: ['success', 'growth']\n        };\n        \n        return relationships[currentTheme] || [];\n    }\n\n    // 生成視覺元素建議\n    generateVisualElements(theme) {\n        const elements = {\n            success: {\n                colors: ['#FFD700', '#FF6B35', '#1E3A8A'],\n                fonts: ['現代感強的無襯線字體', '粗體標題字型'],\n                effects: ['金色光芒特效', '上升箭頭動畫', '光線追蹤效果']\n            },\n            growth: {\n                colors: ['#22C55E', '#84CC16', '#0EA5E9'],\n                fonts: ['自然有機感的字體', '手寫風格字型'],\n                effects: ['生長動畫', '漸變色過渡', '粒子效果']\n            },\n            courage: {\n                colors: ['#DC2626', '#F59E0B', '#7C3AED'],\n                fonts: ['力量感的粗體字', '英雄主義風格字型'],\n                effects: ['火焰特效', '閃電動畫', '光劍效果']\n            }\n        };\n        \n        return elements[theme] || elements.success;\n    }\n\n    // 回退增強功能（當 AI API 不可用時）\n    fallbackEnhancement(quote, theme, tone) {\n        return {\n            enhancedScript: {\n                intro: `關於${theme}的思考...`,\n                story: `${quote} 這句話蕴含着深刻的智慧...`,\n                closing: \"讓我們一起踐行這個理念。\",\n                scenes: [\"基本場景描述\"]\n            },\n            suggestions: {\n                alternativeQuotes: [\"建議功能暫時不可用\"],\n                improvementTips: [\"請稍後重試\"],\n                relatedThemes: []\n            },\n            visualElements: {\n                colors: ['#333333'],\n                fonts: ['默認字體'],\n                effects: ['基本效果']\n            },\n            confidence: 60,\n            aiGenerated: false\n        };\n    }\n\n    // 生成智能金句建議\n    async generateSmartQuotes(theme, mood, length = 5) {\n        try {\n            await new Promise(resolve => setTimeout(resolve, 800));\n            \n            const themeData = this.inspirationalThemes[theme];\n            const quotes = [];\n            \n            for (let i = 0; i < length; i++) {\n                const template = this.quoteTemplates[Math.floor(Math.random() * this.quoteTemplates.length)];\n                const keywords = themeData.keywords;\n                \n                let quote = template.replace(/\\{[^}]+\\}/g, () => {\n                    return keywords[Math.floor(Math.random() * keywords.length)];\n                });\n                \n                quotes.push({\n                    text: quote,\n                    theme: theme,\n                    confidence: Math.floor(Math.random() * 20) + 80,\n                    popularity: Math.floor(Math.random() * 100)\n                });\n            }\n            \n            return quotes.sort((a, b) => b.confidence - a.confidence);\n            \n        } catch (error) {\n            console.error('智能金句生成失敗:', error);\n            return [];\n        }\n    }\n\n    // 分析使用者輸入的金句\n    async analyzeQuote(quote) {\n        try {\n            await new Promise(resolve => setTimeout(resolve, 600));\n            \n            const analysis = {\n                sentiment: this.analyzeSentiment(quote),\n                themes: this.detectThemes(quote),\n                emotionalImpact: Math.floor(Math.random() * 30) + 70,\n                suggestions: this.getQuoteImprovementSuggestions(quote),\n                keywords: this.extractKeywords(quote)\n            };\n            \n            return analysis;\n            \n        } catch (error) {\n            console.error('金句分析失敗:', error);\n            return null;\n        }\n    }\n\n    // 情感分析\n    analyzeSentiment(quote) {\n        const positiveWords = ['成功', '成長', '勇氣', '希望', '夢想', '堅持', '努力', '相信'];\n        const negativeWords = ['失敗', '困難', '挫折', '恐懼'];\n        \n        let positive = 0;\n        let negative = 0;\n        \n        positiveWords.forEach(word => {\n            if (quote.includes(word)) positive++;\n        });\n        \n        negativeWords.forEach(word => {\n            if (quote.includes(word)) negative++;\n        });\n        \n        if (positive > negative) return 'positive';\n        if (negative > positive) return 'negative';\n        return 'neutral';\n    }\n\n    // 檢測主題\n    detectThemes(quote) {\n        const themes = [];\n        \n        Object.keys(this.inspirationalThemes).forEach(theme => {\n            const keywords = this.inspirationalThemes[theme].keywords;\n            const matches = keywords.filter(keyword => quote.includes(keyword));\n            \n            if (matches.length > 0) {\n                themes.push({\n                    theme: theme,\n                    confidence: (matches.length / keywords.length) * 100,\n                    matchedKeywords: matches\n                });\n            }\n        });\n        \n        return themes.sort((a, b) => b.confidence - a.confidence);\n    }\n\n    // 提取關鍵詞\n    extractKeywords(quote) {\n        const allKeywords = Object.values(this.inspirationalThemes)\n            .flatMap(theme => theme.keywords);\n        \n        return allKeywords.filter(keyword => quote.includes(keyword));\n    }\n\n    // 獲取金句改進建議\n    getQuoteImprovementSuggestions(quote) {\n        const suggestions = [];\n        \n        if (quote.length < 10) {\n            suggestions.push(\"金句可以更具體一些，增加更多細節\");\n        }\n        \n        if (quote.length > 50) {\n            suggestions.push(\"金句可以更簡潔，突出核心訊息\");\n        }\n        \n        if (!quote.includes('你') && !quote.includes('我')) {\n            suggestions.push(\"可以加入人稱代詞，讓金句更有親和力\");\n        }\n        \n        const keywords = this.extractKeywords(quote);\n        if (keywords.length === 0) {\n            suggestions.push(\"可以加入更多勵志關鍵詞，增強激勵效果\");\n        }\n        \n        return suggestions;\n    }\n}\n\n// 導出單例實例\nexport const aiService = new AIService();\nexport default AIService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}