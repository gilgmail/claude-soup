{"ast":null,"code":"// src/services/api.js\n\nconst API_BASE_URL = 'https://api.example.com'; // Replace with your actual API base URL\n\nexport const fetchTrendingTopics = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/trending`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching trending topics:', error);\n    throw error;\n  }\n};\nexport const submitQuote = async quote => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/submit`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        quote\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error submitting quote:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","fetchTrendingTopics","response","fetch","ok","Error","data","json","error","console","submitQuote","quote","method","headers","body","JSON","stringify"],"sources":["/Users/gilko/Documents/claude-code/soup2/motivation-script-generator/src/services/api.js"],"sourcesContent":["// src/services/api.js\n\nconst API_BASE_URL = 'https://api.example.com'; // Replace with your actual API base URL\n\nexport const fetchTrendingTopics = async () => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/trending`);\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Error fetching trending topics:', error);\n        throw error;\n    }\n};\n\nexport const submitQuote = async (quote) => {\n    try {\n        const response = await fetch(`${API_BASE_URL}/submit`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ quote }),\n        });\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Error submitting quote:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG,yBAAyB,CAAC,CAAC;;AAEhD,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,WAAW,CAAC;IACxD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAOC,KAAK,IAAK;EACxC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,EAAE;MACnDY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL;MAAM,CAAC;IAClC,CAAC,CAAC;IACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}